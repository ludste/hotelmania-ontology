// file: HotelmaniaOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package es.upm.fi.emse.hotelmania;

import jade.content.onto.*;
import jade.content.schema.*;
import jade.util.leap.HashMap;
import jade.content.lang.Codec;
import jade.core.CaseInsensitiveString;

/** file: HotelmaniaOntology.java
 * @author ontology bean generator
 * @version 2015/05/9, 20:33:24
 */
public class HotelmaniaOntology extends jade.content.onto.Ontology  {
  //NAME
  public static final String ONTOLOGY_NAME = "Hotelmania";
  // The singleton instance of this ontology
  private static ReflectiveIntrospector introspect = new ReflectiveIntrospector();
  private static Ontology theInstance = new HotelmaniaOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String REQUESTBANKACCOUNTSTATUS_HOTEL="hotel";
    public static final String REQUESTBANKACCOUNTSTATUS="RequestBankAccountStatus";
    public static final String CHAREGESTAFFHOTEL_HOTEL="hotel";
    public static final String CHAREGESTAFFHOTEL_BILL="bill";
    public static final String CHAREGESTAFFHOTEL="CharegeStaffHotel";
    public static final String RESPONSEBANKACCOUNTSTATUS_BALANCE="balance";
    public static final String RESPONSEBANKACCOUNTSTATUS="ResponseBankAccountStatus";
    public static final String HOTELREGISTRATION_HOTEL="hotel";
    public static final String HOTELREGISTRATION="HotelRegistration";
    public static final String OPENBANKACCOUNT_HOTEL="hotel";
    public static final String OPENBANKACCOUNT="OpenBankAccount";
    public static final String REQUESTSTAFF_REQUESTINGHOTEL="requestingHotel";
    public static final String REQUESTSTAFF_STAFF="staff";
    public static final String REQUESTSTAFF="RequestStaff";
    public static final String CURRENTTIME_TIME="time";
    public static final String CURRENTTIME="CurrentTime";
    public static final String BANKACCOUNT_ACCOUNTID="accountId";
    public static final String BANKACCOUNT_BALANCE="balance";
    public static final String BANKACCOUNT="BankAccount";
    public static final String TIME_DAY="day";
    public static final String TIME="Time";
    public static final String STAFF_COOKERONESTAR="cookerOneStar";
    public static final String STAFF_COOKERTHREESTARS="cookerThreeStars";
    public static final String STAFF_RECEPTIONISTNOVICE="receptionistNovice";
    public static final String STAFF_CLEANER="cleaner";
    public static final String STAFF_COOKERTWOSTARS="cookerTwoStars";
    public static final String STAFF_RECEPTIONISTEXPERIENCED="receptionistExperienced";
    public static final String STAFF="Staff";
    public static final String HOTEL_HOTELID="hotelId";
    public static final String HOTEL="Hotel";

  /**
   * Constructor
  */
  private HotelmaniaOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema hotelSchema = new ConceptSchema(HOTEL);
    add(hotelSchema, es.upm.fi.emse.hotelmania.Hotel.class);
    ConceptSchema staffSchema = new ConceptSchema(STAFF);
    add(staffSchema, es.upm.fi.emse.hotelmania.Staff.class);
    ConceptSchema timeSchema = new ConceptSchema(TIME);
    add(timeSchema, es.upm.fi.emse.hotelmania.Time.class);
    ConceptSchema bankAccountSchema = new ConceptSchema(BANKACCOUNT);
    add(bankAccountSchema, es.upm.fi.emse.hotelmania.BankAccount.class);

    // adding AgentAction(s)
    AgentActionSchema currentTimeSchema = new AgentActionSchema(CURRENTTIME);
    add(currentTimeSchema, es.upm.fi.emse.hotelmania.CurrentTime.class);
    AgentActionSchema requestStaffSchema = new AgentActionSchema(REQUESTSTAFF);
    add(requestStaffSchema, es.upm.fi.emse.hotelmania.RequestStaff.class);
    AgentActionSchema openBankAccountSchema = new AgentActionSchema(OPENBANKACCOUNT);
    add(openBankAccountSchema, es.upm.fi.emse.hotelmania.OpenBankAccount.class);
    AgentActionSchema hotelRegistrationSchema = new AgentActionSchema(HOTELREGISTRATION);
    add(hotelRegistrationSchema, es.upm.fi.emse.hotelmania.HotelRegistration.class);
    AgentActionSchema responseBankAccountStatusSchema = new AgentActionSchema(RESPONSEBANKACCOUNTSTATUS);
    add(responseBankAccountStatusSchema, es.upm.fi.emse.hotelmania.ResponseBankAccountStatus.class);
    AgentActionSchema charegeStaffHotelSchema = new AgentActionSchema(CHAREGESTAFFHOTEL);
    add(charegeStaffHotelSchema, es.upm.fi.emse.hotelmania.CharegeStaffHotel.class);
    AgentActionSchema requestBankAccountStatusSchema = new AgentActionSchema(REQUESTBANKACCOUNTSTATUS);
    add(requestBankAccountStatusSchema, es.upm.fi.emse.hotelmania.RequestBankAccountStatus.class);

    // adding AID(s)

    // adding Predicate(s)


    // adding fields
    hotelSchema.add(HOTEL_HOTELID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    staffSchema.add(STAFF_RECEPTIONISTEXPERIENCED, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    staffSchema.add(STAFF_COOKERTWOSTARS, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    staffSchema.add(STAFF_CLEANER, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    staffSchema.add(STAFF_RECEPTIONISTNOVICE, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    staffSchema.add(STAFF_COOKERTHREESTARS, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    staffSchema.add(STAFF_COOKERONESTAR, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    timeSchema.add(TIME_DAY, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    bankAccountSchema.add(BANKACCOUNT_BALANCE, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.MANDATORY);
    bankAccountSchema.add(BANKACCOUNT_ACCOUNTID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    currentTimeSchema.add(CURRENTTIME_TIME, timeSchema, ObjectSchema.MANDATORY);
    requestStaffSchema.add(REQUESTSTAFF_STAFF, staffSchema, ObjectSchema.MANDATORY);
    requestStaffSchema.add(REQUESTSTAFF_REQUESTINGHOTEL, hotelSchema, ObjectSchema.MANDATORY);
    openBankAccountSchema.add(OPENBANKACCOUNT_HOTEL, hotelSchema, ObjectSchema.MANDATORY);
    hotelRegistrationSchema.add(HOTELREGISTRATION_HOTEL, hotelSchema, ObjectSchema.MANDATORY);
    responseBankAccountStatusSchema.add(RESPONSEBANKACCOUNTSTATUS_BALANCE, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.MANDATORY);
    charegeStaffHotelSchema.add(CHAREGESTAFFHOTEL_BILL, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.MANDATORY);
    charegeStaffHotelSchema.add(CHAREGESTAFFHOTEL_HOTEL, hotelSchema, ObjectSchema.MANDATORY);
    requestBankAccountStatusSchema.add(REQUESTBANKACCOUNTSTATUS_HOTEL, hotelSchema, ObjectSchema.MANDATORY);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
  }
